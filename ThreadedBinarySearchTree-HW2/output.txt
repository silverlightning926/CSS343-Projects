Sat Oct 22 18:46:47 PDT 2022
Linux csslab7 4.18.0-372.26.1.el8_6.x86_64 #1 SMP Tue Sep 13 18:09:48 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux
uid=1139093(siddrao) gid=2121139093(siddrao) groups=2121139093(siddrao),605559(lab-access)
=====================================================
1. Compiles without warnings with -Wall -Wextra flags
=====================================================
=====================================================
2. Runs and produces correct output
=====================================================
Original Tree: [1, ]

New Tree: [1, ]


Original Tree: [1, 2, 3, 4, ]

New Tree: [1, ]


=====================================================
3. clang-tidy warnings are fixed
=====================================================
12259 warnings generated.
51349 warnings generated.
/home/NETID/siddrao/CSS343Projects/ThreadedBinarySearchTree-HW2/threadedBST.cpp:78:20: error: function 'buildSubTree' is within a recursive call chain [misc-no-recursion,-warnings-as-errors]
Node *ThreadedBST::buildSubTree(const std::vector<int> &nums, int lower,
                   ^
/home/NETID/siddrao/CSS343Projects/ThreadedBinarySearchTree-HW2/threadedBST.cpp:78:20: note: example recursive call chain, starting from function 'buildSubTree'
/home/NETID/siddrao/CSS343Projects/ThreadedBinarySearchTree-HW2/threadedBST.cpp:97:19: note: Frame #1: function 'buildSubTree' calls function 'buildSubTree' here:
  root->leftPtr = buildSubTree(nums, lower, i - 1);
                  ^
/home/NETID/siddrao/CSS343Projects/ThreadedBinarySearchTree-HW2/threadedBST.cpp:97:19: note: ... which was the starting point of the recursive call chain; there may be other cycles
/home/NETID/siddrao/CSS343Projects/ThreadedBinarySearchTree-HW2/threadedBST.cpp:137:19: error: function 'clear' is within a recursive call chain [misc-no-recursion,-warnings-as-errors]
void ThreadedBST::clear(Node *node) {
                  ^
/home/NETID/siddrao/CSS343Projects/ThreadedBinarySearchTree-HW2/threadedBST.cpp:137:19: note: example recursive call chain, starting from function 'clear'
/home/NETID/siddrao/CSS343Projects/ThreadedBinarySearchTree-HW2/threadedBST.cpp:140:5: note: Frame #1: function 'clear' calls function 'clear' here:
    clear(node->leftPtr);
    ^
/home/NETID/siddrao/CSS343Projects/ThreadedBinarySearchTree-HW2/threadedBST.cpp:140:5: note: ... which was the starting point of the recursive call chain; there may be other cycles
Suppressed 51347 warnings (51347 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
2 warnings treated as errors
=====================================================
4. clang-format does not find any formatting issues
=====================================================
Running clang-format on ./main.cpp
Running clang-format on ./threadedBST.cpp
=====================================================
5. No memory leaks using g++
=====================================================
=====================================================
6. No memory leaks using valgrind, look for "definitely lost" 
=====================================================
==562759== Memcheck, a memory error detector
==562759== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==562759== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==562759== Command: ./a.out
==562759== Parent PID: 562666
==562759== 
==562759== 
==562759== HEAP SUMMARY:
==562759==     in use at exit: 0 bytes in 0 blocks
==562759==   total heap usage: 60 allocs, 60 frees, 77,656 bytes allocated
==562759== 
==562759== All heap blocks were freed -- no leaks are possible
==562759== 
==562759== For lists of detected and suppressed errors, rerun with: -s
==562759== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
=====================================================
7. Tests have full code coverage
=====================================================
WARNING: check-code-coverage.sh script is missing
Sat Oct 22 18:47:04 PDT 2022
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
